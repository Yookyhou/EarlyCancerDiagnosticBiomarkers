labs(x = "log2 Fold Change", y = "-log10(Adjusted p-value)", title = "Volcano Plot of Differential Gene Expression") +
theme_minimal()
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
# 读取数据
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 将基因名设置为行名，并移除包含基因名的列
rownames(expr_data) <- expr_data$Unnamed.0  # 确保列名正确
expr_data <- expr_data[, -1]
# 检查样本名是否与聚类结果完全匹配，对齐样本顺序
# 假设样本名在 cluster_data 的 'Sample Name' 列中
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
# 检查并处理任何不匹配的样本
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
# 创建 DESeq2 分析需要的 colData
# 创建 DESeq2 分析需要的 colData
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
# 构建 DESeqDataSet 对象
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
# 运行 DESeq2 分析
dds <- DESeq(dds)
# 获取差异表达分析结果，例如比较聚类1与聚类0
# 获取差异表达分析结果，例如比较聚类1与聚类0
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 从原始表达数据中获取基因名并添加到结果中
sig_genes12 <- as.data.frame(results12)
gene_names <- rownames(expr_data)
sig_genes12 <- cbind(Gene = gene_names, sig_genes12)
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 保存显著差异表达的基因结果
write.csv(sig_genes12, file = "/Users/yooky/Desktop/建模/基因/第三问/significant_genes_clusters_early.csv", row.names = FALSE)
# 设置行名
rownames(expr_data) <- expr_data$Unnamed.0
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 将基因名设置为行名，并移除包含基因名的列
rownames(expr_data) <- expr_data$Unnamed.0
expr_data <- expr_data[, -1]
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
dds <- DESeq(dds)
results12 <- results(dds, contrast = c("cluster", "1", "0"))
sig_genes12 <- as.data.frame(results12)
gene_names <- rownames(expr_data)
sig_genes12 <- cbind(Gene = gene_names, sig_genes12)
sig_genes12 <- subset(sig_genes12, padj < 0.05)
write.csv(sig_genes12, file = "/Users/yooky/Desktop/建模/基因/第三问/significant_genes_clusters_early.csv", row.names = FALSE)
View(expr_data)
head(sig_genes12)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$Unnamed.0
# 移除包含基因名的列并设置行名
expr_data <- expr_data[, -1]
rownames(expr_data) <- gene_symbols
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
dds <- DESeq(dds)
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# DESeq2分析完成后，使用保存的基因符号
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- rownames(results12) # 确保这一行用保存的基因符号替换
# 筛选显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 输出包含基因符号的数据
write.csv(sig_genes12, file = "/Users/yooky/Desktop/建模/基因/第三问/significant_genes_clusters_early.csv", row.names = FALSE)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$Unnamed.0
# 将基因名设置为行名，并移除包含基因名的列
expr_data <- expr_data[, -1]
rownames(expr_data) <- gene_symbols
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
dds <- DESeq(dds)
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 将基因符号添加到结果中
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- rownames(results12)
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 确保基因符号作为第一列
sig_genes12 <- sig_genes12[, c("Gene", setdiff(names(sig_genes12), "Gene"))]
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$Unnamed.0
# 将基因名设置为行名，并移除包含基因名的列
expr_data <- expr_data[, -1]
rownames(expr_data) <- gene_symbols
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
dds <- DESeq(dds)
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 将基因符号添加到结果中
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- rownames(results12)
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 确保基因符号作为第一列
sig_genes12 <- sig_genes12[, c("Gene", setdiff(names(sig_genes12), "Gene"))]
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$Unnamed.0
# 将基因名设置为行名，并移除包含基因名的列
expr_data <- expr_data[, -1]
rownames(expr_data) <- gene_symbols
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
dds <- DESeq(dds)
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 将基因符号添加到结果中
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- gene_symbols[rownames(results12)]
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 确保基因符号作为第一列
sig_genes12 <- sig_genes12[, c("Gene", setdiff(names(sig_genes12), "Gene"))]
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$Unnamed.0
# 将基因名设置为行名，并移除包含基因名的列
expr_data <- expr_data[, -1]
rownames(expr_data) <- gene_symbols
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
dds <- DESeq(dds)
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 将基因符号添加到结果中
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- gene_symbols[rownames(results12)]
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 保存显著差异表达的基因结果
write.csv(sig_genes12, file = "/Users/yooky/Desktop/建模/基因/第三问/significant_genes_clusters_early.csv", row.names = FALSE)
View(expr_data)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
View(expr_data)
gene_symbols <- expr_data$V1
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$V1
# 将基因名设置为行名，并移除包含基因名的列
expr_data <- expr_data[, -1]
rownames(expr_data) <- gene_symbols
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
dds <- DESeq(dds)
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 将基因符号添加到结果中
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- gene_symbols[rownames(results12)]
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 保存显著差异表达的基因结果
write.csv(sig_genes12, file = "/Users/yooky/Desktop/建模/基因/第三问/significant_genes_clusters_early.csv", row.names = FALSE)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$V1
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$V1
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$V1
# 将基因名设置为行名，并移除包含基因名的列
expr_data <- expr_data[, -1]
rownames(expr_data) <- gene_symbols
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
dds <- DESeq(dds)
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 将基因符号添加到结果中
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- gene_symbols[rownames(results12)]
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 保存显著差异表达的基因结果
write.csv(sig_genes12, file = "/Users/yooky/Desktop/建模/基因/第三问/significant_genes_clusters_early.csv", row.names = FALSE)
View(results12)
View(sig_genes12)
View(sig_genes12)
View(sig_genes12)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 将基因名从行名转换为一个普通列 "Gene"
expr_data$Gene <- rownames(expr_data)
rownames(expr_data) <- NULL
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 将基因名从行名转换为一个普通列 "Gene"
expr_data$Gene <- rownames(expr_data)
rownames(expr_data) <- NULL
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 将基因名从行名转换为一个普通列 "Gene"
expr_data$Gene <- rownames(expr_data)
rownames(expr_data) <- NULL
# 重新排序 cluster_data 以匹配 expr_data 的样本名
cluster_data_ordered <- cluster_data[match(colnames(expr_data)[-ncol(expr_data)], cluster_data$`Sample Name`), ]
# 检查是否有不匹配的样本
if (any(is.na(cluster_data_ordered$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 将基因名从行名转换为一个普通列 "Gene"
expr_data$Gene <- rownames(expr_data)
rownames(expr_data) <- NULL
# 重新排序 cluster_data 以匹配 expr_data 的样本名
cluster_data_ordered <- cluster_data[match(colnames(expr_data)[-ncol(expr_data)], cluster_data$`Sample Name`), ]
# 检查是否有不匹配的样本
if (any(is.na(cluster_data_ordered$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 将基因名从行名转换为一个普通列 "Gene"
expr_data$Gene <- rownames(expr_data)
rownames(expr_data) <- NULL
# 重新排序 cluster_data 以匹配 expr_data 的样本名
cluster_data_ordered <- cluster_data[match(colnames(expr_data)[-ncol(expr_data)], cluster_data$`Sample Name`), ]
colData <- data.frame(cluster = factor(cluster_data_ordered$Cluster), row.names = colnames(expr_data)[-ncol(expr_data)])
dds <- DESeqDataSetFromMatrix(countData = expr_data[, -ncol(expr_data)],
colData = colData,
design = ~ cluster)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 将基因名从行名转换为一个普通列 "Gene"
expr_data$Gene <- rownames(expr_data)
rownames(expr_data) <- NULL
# 重新排序 cluster_data 以匹配 expr_data 的样本名
cluster_data_ordered <- cluster_data[match(colnames(expr_data)[-ncol(expr_data)], cluster_data$`Sample Name`), ]
colData <- data.frame(cluster = factor(cluster_data_ordered$Cluster), row.names = colnames(expr_data)[-ncol(expr_data)])
dds <- DESeqDataSetFromMatrix(countData = expr_data[, -ncol(expr_data)],
colData = colData,
design = ~ cluster)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$Unnamed.0
# 移除包含基因名的列但不设置为行名
expr_data <- expr_data[, -1]
# 确保样本名与聚类结果匹配
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
# 准备 DESeq2 需要的 colData
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
# 构建 DESeqDataSet 对象
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
# 运行 DESeq2 分析
dds <- DESeq(dds)
# 获取差异表达分析结果
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 将基因符号添加到结果中
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- gene_symbols
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 确保基因符号作为第一列
sig_genes12 <- sig_genes12[, c("Gene", setdiff(names(sig_genes12), "Gene"))]
View(sig_genes12)
View(expr_data)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：EarlyStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Early_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$V1
# 移除包含基因名的列但不设置为行名
expr_data <- expr_data[, -1]
# 确保样本名与聚类结果匹配
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
# 准备 DESeq2 需要的 colData
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
# 构建 DESeqDataSet 对象
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
# 运行 DESeq2 分析
dds <- DESeq(dds)
# 获取差异表达分析结果
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 将基因符号添加到结果中
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- gene_symbols
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 确保基因符号作为第一列
sig_genes12 <- sig_genes12[, c("Gene", setdiff(names(sig_genes12), "Gene"))]
# 保存显著差异表达的基因结果
write.csv(sig_genes12, file = "/Users/yooky/Desktop/建模/基因/第三问/significant_genes_clusters_early.csv", row.names = FALSE)
View(sig_genes12)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件2：LaterStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Later_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
library(DESeq2)
library(data.table)
# 读取基因表达数据和聚类结果
expr_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/附件3：LaterStage_exp.csv"
cluster_data_path <- "/Users/yooky/Desktop/建模/基因/第三问/Clustered_Later_Stage_Results.csv"
expr_data <- fread(expr_data_path, data.table = FALSE)
cluster_data <- fread(cluster_data_path, data.table = FALSE)
# 保存基因符号
gene_symbols <- expr_data$V1
# 移除包含基因名的列但不设置为行名
expr_data <- expr_data[, -1]
# 确保样本名与聚类结果匹配
cluster_data <- cluster_data[match(colnames(expr_data), cluster_data$`Sample Name`), ]
if (any(is.na(cluster_data$Cluster))) {
stop("Some samples in expression data do not have matching cluster information.")
}
# 准备 DESeq2 需要的 colData
colData <- data.frame(cluster = factor(cluster_data$Cluster), row.names = colnames(expr_data))
# 构建 DESeqDataSet 对象
dds <- DESeqDataSetFromMatrix(countData = expr_data,
colData = colData,
design = ~ cluster)
# 运行 DESeq2 分析
dds <- DESeq(dds)
# 获取差异表达分析结果
results12 <- results(dds, contrast = c("cluster", "1", "0"))
# 将基因符号添加到结果中
sig_genes12 <- as.data.frame(results12)
sig_genes12$Gene <- gene_symbols
# 筛选出显著差异表达的基因
sig_genes12 <- subset(sig_genes12, padj < 0.05)
# 确保基因符号作为第一列
sig_genes12 <- sig_genes12[, c("Gene", setdiff(names(sig_genes12), "Gene"))]
# 保存显著差异表达的基因结果
write.csv(sig_genes12, file = "/Users/yooky/Desktop/建模/基因/第三问/significant_genes_clusters_later.csv", row.names = FALSE)
